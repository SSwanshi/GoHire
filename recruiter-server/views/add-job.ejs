<%- include('layout/header') %>

  <div class="gradientyandb min-h-screen flex items-center justify-center">
    <div class="max-w-lg mx-auto p-6 bg-blue-100 rounded-lg shadow-md md:w-full max-w-[800px] mx-auto">
      <h2 class="text-2xl font-bold text-blue-800 mb-4">Post a New Job</h2>
      <form id="jobForm" action="<%= isEdit ? '/recruiter/edit-job/' + job._id : '/recruiter/add-job' %>" method="POST"
        class="space-y-4">

        <div class="grid grid-cols-2 gap-4">
          <div>
            <label for="jobTitle" class="block text-blue-700 font-medium">Title</label>
            <input type="text" id="jobTitle" name="jobTitle" required value="<%= isEdit ? job.jobTitle : '' %>"
              class="w-full mt-1 p-2 border border-blue-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none">
            <p class="text-red-500 text-sm hidden" id="titleError">Title must contain only alphabets.</p>
          </div>

          <div>
            <label for="jobDescription" class="block text-blue-700 font-medium">Description</label>
            <input type="text" id="jobDescription" name="jobDescription" required
              value="<%= isEdit ? job.jobDescription : '' %>"
              class="w-full mt-1 p-2 border border-blue-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none">
            <p class="text-red-500 text-sm hidden" id="descriptionError">Description must be at least 10 characters.</p>
          </div>
        </div>

        <div class="grid grid-cols-2 gap-4">
          <div>
            <label for="jobRequirements" class="block text-blue-700 font-medium">Requirements</label>
            <input type="text" id="jobRequirements" name="jobRequirements" required
              value="<%= isEdit ? job.jobRequirements : '' %>"
              class="w-full mt-1 p-2 border border-blue-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none">
            <p class="text-red-500 text-sm hidden" id="requirementsError">Requirements must be alphanumeric.</p>
          </div>

          <div>
            <label for="jobSalary" class="block text-blue-700 font-medium">Salary (in LPA)</label>
            <input type="number" id="jobSalary" name="jobSalary" required min="0"
              value="<%= isEdit ? job.jobSalary : '' %>"
              class="w-full mt-1 p-2 border border-blue-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none">
            <p class="text-red-500 text-sm hidden" id="salaryError">Salary must be a positive number.</p>
          </div>
        </div>

        <div class="grid grid-cols-2 gap-4">
          <div>
            <label for="jobLocation" class="block text-blue-700 font-medium">Location</label>
            <input type="text" id="jobLocation" name="jobLocation" required value="<%= isEdit ? job.jobLocation : '' %>"
              class="w-full mt-1 p-2 border border-blue-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none">
            <p class="text-red-500 text-sm hidden" id="locationError">Location must contain only alphabets.</p>
          </div>

          <div>
            <label for="jobType" class="block text-blue-700 font-medium">Job Type</label>
            <input type="text" id="jobType" name="jobType" required value="<%= isEdit ? job.jobType : '' %>"
              class="w-full mt-1 p-2 border border-blue-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none">
            <p class="text-red-500 text-sm hidden" id="jobTypeError">Job type must be either "Full-Time" or "Part-Time".
            </p>
          </div>
        </div>

        <div class="grid grid-cols-2 gap-4">
          <div>
            <label for="jobExperience" class="block text-blue-700 font-medium">Experience Level (in years)</label>
            <input type="number" id="jobExperience" name="jobExperience" required min="0"
              value="<%= isEdit ? job.jobExperience : '' %>"
              class="w-full mt-1 p-2 border border-blue-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none">
            <p class="text-red-500 text-sm hidden" id="experienceError">Experience must be 0 or more years.</p>
          </div>

          <div>
            <label for="noofPositions" class="block text-blue-700 font-medium">No of Positions</label>
            <input type="number" id="noofPositions" name="noofPositions" required min="1"
              value="<%= isEdit ? job.noofPositions : '' %>"
              class="w-full mt-1 p-2 border border-blue-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none">
            <p class="text-red-500 text-sm hidden" id="positionsError">Must be at least 1 position.</p>
          </div>
        </div>

        <div>
          <div>
            <label for="jobExpiry" class="block text-blue-700 font-medium">Application Deadline</label>
            <input type="date" id="jobExpiry" name="jobExpiry" required
              value="<%= isEdit ? job.jobExpiry.toISOString().substring(0, 10) : '' %>"
              class="w-full mt-1 p-2 border border-blue-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none">
            <p class="text-red-500 text-sm hidden" id="expiryError">Application deadline must be today or in the future.
            </p>
          </div>

          <div>
            <label for="jobCompany" class="block text-blue-700 font-medium">Company</label>
            <select id="jobCompany" name="jobCompany" required
              class="w-full mt-1 p-2 border border-blue-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:outline-none">
              <option value="">Select a company</option>
              <% companies.forEach(company=> { %>
                <option value="<%= company._id %>" <%=isEdit && job.jobCompany && company._id.equals(job.jobCompany._id)
                  ? 'selected' : '' %> >
                  <%= company.companyName %>
                </option>
                <% }); %>
            </select>
            <p class="text-red-500 text-sm hidden" id="companyError">Please select a company.</p>
          </div>
        </div>

        <button type="submit" id="submitBtn"
          class="w-full bg-blue-700 text-yellow-400 font-semibold py-2 rounded-md hover:bg-blue-800 hover:text-yellow-300 transition-all">
          <%= isEdit ? 'Update Job' : 'Post New Job' %>
        </button>

      </form>
    </div>
  </div>

  <script>
    document.getElementById("jobForm").addEventListener("submit", function (event) {
      event.preventDefault();

      let isValid = true;

      function validateAlphabets(id, errorId) {
        const value = document.getElementById(id).value.trim();
        const errorElement = document.getElementById(errorId);
        const regex = /^[A-Za-z\s]+$/;
        if (!regex.test(value) || value.length === 0) {
          errorElement.classList.remove("hidden");
          isValid = false;
        } else {
          errorElement.classList.add("hidden");
        }
      }

      function validateAlphanumeric(id, errorId) {
        const value = document.getElementById(id).value.trim();
        const errorElement = document.getElementById(errorId);
        const regex = /^[A-Za-z0-9\s]+$/;
        if (!regex.test(value) || value.length === 0) {
          errorElement.classList.remove("hidden");
          isValid = false;
        } else {
          errorElement.classList.add("hidden");
        }
      }

      function validateNumberField(id, minValue, errorId) {
        const value = document.getElementById(id).value;
        const errorElement = document.getElementById(errorId);
        if (value === "" || value < minValue) {
          errorElement.classList.remove("hidden");
          isValid = false;
        } else {
          errorElement.classList.add("hidden");
        }
      }

      function validateDateField(id, errorId) {
        const value = document.getElementById(id).value;
        const errorElement = document.getElementById(errorId);
        const selectedDate = new Date(value);
        const today = new Date();
        today.setHours(0, 0, 0, 0);
        if (value === "" || selectedDate < today) {
          errorElement.classList.remove("hidden");
          isValid = false;
        } else {
          errorElement.classList.add("hidden");
        }
      }

      function validateJobType(id, errorId) {
        const value = document.getElementById(id).value.trim();
        const errorElement = document.getElementById(errorId);
        if (value !== "Full-Time" && value !== "Part-Time") {
          errorElement.classList.remove("hidden");
          isValid = false;
        } else {
          errorElement.classList.add("hidden");
        }
      }

      validateAlphabets("jobTitle", "titleError");
      validateAlphanumeric("jobRequirements", "requirementsError");
      validateAlphabets("jobLocation", "locationError");
      validateJobType("jobType", "jobTypeError");

      validateNumberField("jobSalary", 0, "salaryError");
      validateNumberField("jobExperience", 0, "experienceError");
      validateNumberField("noofPositions", 1, "positionsError");
      validateDateField("jobExpiry", "expiryError");

      const company = document.getElementById("jobCompany").value;
      if (company === "") {
        document.getElementById("companyError").classList.remove("hidden");
        isValid = false;
      } else {
        document.getElementById("companyError").classList.add("hidden");
      }

      if (!isValid) return;

      submitJobForm();
    });

    function submitJobForm() {
      const form = document.getElementById("jobForm");
      const submitBtn = document.getElementById("submitBtn");
      const originalText = submitBtn.innerHTML;

      submitBtn.disabled = true;
      submitBtn.innerHTML = '⏳ Processing...';

      const formData = new FormData(form);

      const xhr = new XMLHttpRequest();
      xhr.open('POST', form.action, true);
      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');

      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) {
            const response = JSON.parse(xhr.responseText);
            if (response.success) {
              showNotification(response.message, 'success');
              form.reset();
              setTimeout(() => { window.location.href = '/recruiter/jobs'; }, 2000);
            } else {
              showNotification(response.message, 'error');
              submitBtn.disabled = false;
              submitBtn.innerHTML = originalText;
            }
          } else {
            showNotification('Error submitting form', 'error');
            submitBtn.disabled = false;
            submitBtn.innerHTML = originalText;
          }
        }
      };

      xhr.send(formData);
    }

    function showNotification(message, type) {
      const existing = document.querySelector('.notification');
      if (existing) existing.remove();

      const notification = document.createElement('div');
      notification.className = `notification fixed top-5 right-5 p-4 rounded-md shadow-lg z-50 ${type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'}`;
      notification.textContent = message;
      document.body.appendChild(notification);

      setTimeout(() => {
        if (notification.parentNode) notification.parentNode.removeChild(notification);
      }, 3000);
    }
  </script>

  <%- include('layout/footer') %>