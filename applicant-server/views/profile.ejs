<%- include('layout/header') %>
  <nav class="bg-blue-500 p-5 shadow-xl fixed w-full z-10 transition-all duration-300" id="navbar">
    <div class="container mx-auto flex justify-between items-center">
      <a href="/" class="text-black text-3xl font-bold transition-transform hover:scale-105 duration-300 ml-2">Go<span
          class="text-yellow-400">Hire</span></a>

      <div class="relative w-1/3 group">
        <form action="/search" method="POST" id="search-form">
          <input id="search-space" type="text" placeholder="Search for Opportunities" name="parsedValue"
            class="w-full p-3 rounded-full border-2 border-blue-300 focus:outline-none focus:ring-2 focus:ring-yellow-400 transition-all duration-300 shadow-md placeholder:text-gray-700">
        </form>
        <div class="absolute right-3 top-3.5 text-yellow-500">
          <a href="/search" id="search-btn">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
              stroke="currentColor" stroke-width="4">
              <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
          </a>
        </div>
      </div>

      <ul class="hidden md:flex space-x-8 text-white">
        <li><a href="/" class="hover:text-yellow-300 transition-colors duration-300 font-extrabold">Home</a></li>
        <li><a href="/jobs" class="hover:text-yellow-300 transition-colors duration-300 font-extrabold">Jobs</a></li>
        <li><a href="/internships"
            class="hover:text-yellow-300 transition-colors duration-300 font-extrabold">Internship</a></li>
        <li><a href="/contact" class="hover:text-yellow-300 transition-colors duration-300 font-extrabold">Contact
            Us</a></li>
        <% if (user) { %>
          <li class="relative group">
            <button
              class="bg-yellow-400 hover:bg-yellow-500 text-blue-800 font-black py-2 px-6 rounded-full transition-all duration-300 hover:shadow-lg flex items-center">
              <%= user.firstName || 'Profile' %>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24"
                  stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
            </button>
            <div
              class="absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-50 transform -translate-y-2 group-hover:translate-y-0">
              <a href="/profile" class="block px-4 py-2 text-blue-800 hover:bg-blue-50 rounded-t-lg">My Profile</a>
              <a href="/logout" class="block px-4 py-2 text-blue-800 hover:bg-blue-50 rounded-b-lg">Logout</a>
            </div>
          </li>
          <% } else { %>
            <li><a href="/login"
                class="bg-yellow-400 hover:bg-yellow-500 text-blue-800 font-black py-2 px-6 rounded-full transition-all duration-300 hover:shadow-lg">Login</a>
            </li>
            <% } %>
      </ul>

      <div class="md:hidden relative" id="mobile-menu-container">
        <div class="flex flex-col space-y-1 cursor-pointer" id="mobile-menu">
          <span class="block w-6 h-0.5 bg-white transition-all duration-300"></span>
          <span class="block w-6 h-0.5 bg-white transition-all duration-300"></span>
          <span class="block w-6 h-0.5 bg-white transition-all duration-300"></span>
        </div>
        <ul id="dropdown-menu"
          class="absolute right-0 mt-10 w-140 bg-yellow-500 text-blue-500 rounded-lg shadow-lg hidden text-blue-800 flex justify-center flex-col">
          <li><a href="/" class="block px-4 py-2 hover:bg-blue-500 hover:text-yellow-500 text-center">Home</a></li>
          <li><a href="/jobs" class="block px-4 py-2 hover:bg-blue-500 hover:text-yellow-500 text-center">Jobs</a></li>
          <li><a href="/internships"
              class="block px-4 py-2 hover:bg-blue-500 hover:text-yellow-500 text-center">Internships</a></li>
          <li><a href="/contact" class="block px-4 py-2 hover:bg-blue-500 hover:text-yellow-500 text-center">Contact
              Us</a></li>

          <% if (user) { %>
            <li class="relative group flex justify-center">
              <button
                class="bg-yellow-400 hover:bg-blue-500 text-blue-800 font-black py-2 px-6 rounded-full transition-all duration-300 hover:shadow-lg">
                <%= user.firstName || 'Profile' %>
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24"
                    stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                  </svg>
              </button>
              <div
                class="absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-50 transform -translate-y-2 group-hover:translate-y-0 flex justify-center flex-col">
                <a href="/profile" class="block px-4 py-2 text-blue-800 hover:bg-blue-50 rounded-t-lg">My Profile</a>
                <a href="/logout" class="block px-4 py-2 text-blue-800 hover:bg-blue-50 rounded-b-lg">Logout</a>
              </div>
            </li>
            <% } else { %>
              <li><a href="/login"
                  class="bg-yellow-400 hover:bg-yellow-500 text-blue-800 font-black py-2 px-6 rounded-full transition-all duration-300 hover:shadow-lg flex justify-center">Login</a>
              </li>
              <% } %>
        </ul>
      </div>
    </div>
  </nav>

  <header class="pt-32 pb-24 text-white relative overflow-hidden">
    <div class="max-w-4xl mx-auto bg-white p-8 rounded-lg shadow-lg mt-4">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        <!-- Profile Initial Avatar -->
        <div class="md:col-span-1 flex flex-col items-center justify-start">
          <div class="relative">
            <div id="profileInitial"
              class="w-40 h-40 flex items-center justify-center rounded-full border-4 border-yellow-400 shadow-md bg-blue-50 text-blue-900 text-6xl font-bold">
              <%= user.firstName.charAt(0).toUpperCase() %>
            </div>
          </div>
        </div>

        <div class="md:col-span-2">
          <h2 class="text-2xl font-bold text-blue-900 mb-6 pb-2 border-b-2 border-yellow-400">Profile Information</h2>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="bg-blue-50 p-4 rounded-lg">
              <label class="block text-sm font-medium text-blue-700">First Name</label>
              <p class="text-lg text-blue-900 font-semibold">
                <%= user.firstName %>
              </p>
            </div>

            <div class="bg-blue-50 p-4 rounded-lg">
              <label class="block text-sm font-medium text-blue-700">Last Name</label>
              <p class="text-lg text-blue-900 font-semibold">
                <%= user.lastName %>
              </p>
            </div>

            <div class="bg-blue-50 p-4 rounded-lg">
              <label class="block text-sm font-medium text-blue-700">Email Address</label>
              <p class="text-lg text-blue-900 font-semibold flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-600" fill="none"
                  viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                </svg>
                <%= user.email %>
              </p>
            </div>

            <div class="bg-blue-50 p-4 rounded-lg">
              <label class="block text-sm font-medium text-blue-700">Phone Number</label>
              <p class="text-lg text-blue-900 font-semibold flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-600" fill="none"
                  viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                </svg>
                <%= user.phone %>
              </p>
            </div>

            <div class="bg-blue-50 p-4 rounded-lg">
              <label class="block text-sm font-medium text-blue-700">Gender</label>
              <p class="text-lg text-blue-900 font-semibold">
                <%= user.gender %>
              </p>
            </div>

            <div class="bg-blue-50 p-4 rounded-lg">
              <label class="block text-sm font-medium text-blue-700">Member Since</label>
              <p class="text-lg text-blue-900 font-semibold">
                25 March 2025
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Resume Upload Section -->
      <div class="mt-8 bg-white rounded-lg shadow-md p-6">
        <h2 class="text-2xl font-bold text-gray-800 mb-4">Resume Information</h2>
        <div class="border-b border-gray-300 mb-6"></div>

        <div class="space-y-6">
          <!-- Current Resume Display -->
          <div id="currentResumeSection" class="<%= resumeData ? 'block' : 'hidden' %> p-4 bg-blue-50 rounded-lg">
            <div class="flex items-center justify-between">
              <div>
                <p class="text-lg font-semibold text-gray-800">Current Resume</p>
                <p class="text-sm text-gray-600" id="resumeFileName">
                  <%= resumeData ? resumeData.fileName : '' %>
                </p>
                <p class="text-xs text-gray-500" id="resumeUploadDate">Uploaded: <%= resumeData ? resumeData.uploadDate
                    : '' %>
                </p>
              </div>
              <div class="flex space-x-2">
                <button id="viewResumeBtn"
                  class="px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700 transition"
                  onclick="viewResume()">
                  View
                </button>
                <button id="deleteResumeBtn"
                  class="px-3 py-1 bg-red-600 text-white text-sm rounded hover:bg-red-700 transition"
                  onclick="deleteResume()">
                  Delete
                </button>
              </div>
            </div>
          </div>

          <!-- Resume Upload Form -->
          <div id="resumeUploadSection" class="<%= resumeData ? 'hidden' : 'block' %>">
            <form id="resumeUploadForm" enctype="multipart/form-data" class="space-y-4">
              <div
                class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-blue-500 transition"
                id="dropZone">
                <input type="file" id="resumeFile" name="resume" accept=".pdf,.doc,.docx" class="hidden" />
                <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48"
                  aria-hidden="true">
                  <path
                    d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4h-12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02"
                    stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <div class="mt-2">
                  <p class="text-sm text-gray-700">
                    <span class="font-medium text-blue-600 hover:text-blue-500">Click to upload</span> or drag and drop
                  </p>
                  <p class="text-xs text-gray-500 mt-1">PDF, DOC, or DOCX up to 5MB</p>
                </div>
                <p id="selectedFileName" class="mt-2 text-sm text-gray-600 hidden"></p>
              </div>

              <div>
                <label for="resumeTitle" class="block text-sm font-medium text-gray-700">Resume Title (Optional)</label>
                <input type="text" id="resumeTitle" name="resumeTitle" placeholder="My Professional Resume"
                  class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
              </div>

              <div class="flex justify-end">
                <button type="submit"
                  class="px-4 py-2 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition">
                  Upload Resume
                </button>
              </div>
            </form>
          </div>

          <!-- Upload Button (shown when a resume exists) -->
          <div id="uploadNewSection" class="<%= resumeData ? 'block' : 'hidden' %> text-center">
            <button onclick="showUploadForm()"
              class="px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition">
              Upload New Resume
            </button>
          </div>
        </div>
      </div>

      <div class="mt-8 flex justify-end space-x-4">
        <button onclick="window.location.href = '/'"
          class="bg-gray-200 hover:bg-gray-300 text-gray-800 py-2 px-4 rounded-lg transition duration-300">Log
          Out</button>
      </div>
    </div>
  </header>

  <script>
    document.getElementById('mobile-menu').addEventListener('click', function () {
      document.getElementById('dropdown-menu').classList.toggle('hidden');
    });

    // Client-side JavaScript for resume upload functionality
    document.addEventListener('DOMContentLoaded', function () {
      const dropZone = document.getElementById('dropZone');
      const resumeFile = document.getElementById('resumeFile');
      const selectedFileName = document.getElementById('selectedFileName');
      const resumeUploadForm = document.getElementById('resumeUploadForm');

      // Click on drop zone to trigger file input
      dropZone.addEventListener('click', function () {
        resumeFile.click();
      });

      // Handle file selection
      resumeFile.addEventListener('change', function () {
        if (this.files && this.files[0]) {
          const file = this.files[0];
          if (validateFile(file)) {
            selectedFileName.textContent = file.name;
            selectedFileName.classList.remove('hidden');
            dropZone.classList.add('border-blue-500', 'bg-blue-50');
          } else {
            resetFileInput();
          }
        }
      });

      // Handle drag and drop
      ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, preventDefaults, false);
      });

      function preventDefaults(e) {
        e.preventDefault();
        e.stopPropagation();
      }

      ['dragenter', 'dragover'].forEach(eventName => {
        dropZone.addEventListener(eventName, highlight, false);
      });

      ['dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, unhighlight, false);
      });

      function highlight() {
        dropZone.classList.add('border-blue-500', 'bg-blue-50');
      }

      function unhighlight() {
        dropZone.classList.remove('border-blue-500', 'bg-blue-50');
      }

      dropZone.addEventListener('drop', handleDrop, false);

      function handleDrop(e) {
        const dt = e.dataTransfer;
        const file = dt.files[0];

        if (validateFile(file)) {
          resumeFile.files = dt.files;
          selectedFileName.textContent = file.name;
          selectedFileName.classList.remove('hidden');
        } else {
          resetFileInput();
        }
      }

      function validateFile(file) {
        // Check file type
        const validTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];
        if (!validTypes.includes(file.type)) {
          alert('Invalid file type. Please upload a PDF, DOC, or DOCX file.');
          return false;
        }

        // Check file size (5MB max)
        if (file.size > 5 * 1024 * 1024) {
          alert('File is too large. Maximum size is 5MB.');
          return false;
        }

        return true;
      }

      function resetFileInput() {
        resumeFile.value = '';
        selectedFileName.textContent = '';
        selectedFileName.classList.add('hidden');
        dropZone.classList.remove('border-blue-500', 'bg-blue-50');
      }

      // Handle form submission
      resumeUploadForm.addEventListener('submit', function (e) {
        e.preventDefault();

        if (!resumeFile.files || !resumeFile.files[0]) {
          alert('Please select a file to upload.');
          return;
        }

        const formData = new FormData();
        formData.append('resume', resumeFile.files[0]);
        formData.append('resumeTitle', document.getElementById('resumeTitle').value);

        uploadResume(formData);
      });
    });

    // Function to show upload form when "Upload New Resume" is clicked
    function showUploadForm() {
      document.getElementById('currentResumeSection').classList.add('hidden');
      document.getElementById('uploadNewSection').classList.add('hidden');
      document.getElementById('resumeUploadSection').classList.remove('hidden');
    }

    // Function to view the resume
    function viewResume() {
      window.location.href = '/resume/<%= user.userId %>';
    }

    // Function to delete the resume
    function deleteResume() {
      if (confirm('Are you sure you want to delete your resume?')) {
        fetch('/api/resume', {
          method: 'DELETE',
        })
          .then(response => {
            if (response.ok) {
              document.getElementById('currentResumeSection').classList.add('hidden');
              document.getElementById('uploadNewSection').classList.add('hidden');
              document.getElementById('resumeUploadSection').classList.remove('hidden');
            }
          })
          .catch(error => {
            console.error('Error deleting resume:', error);
          });
      }
    }

    // Function to upload resume
    function uploadResume(formData) {
      // Show loading state
      const submitBtn = document.querySelector('#resumeUploadForm button[type="submit"]');
      const originalText = submitBtn.textContent;
      submitBtn.textContent = 'Uploading...';
      submitBtn.disabled = true;

      fetch('/api/resume', {
        method: 'POST',
        body: formData
      })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            // Update UI to show the uploaded resume
            document.getElementById('resumeFileName').textContent = data.resumeData.fileName;
            document.getElementById('resumeUploadDate').textContent = 'Uploaded: ' + new Date(data.resumeData.uploadDate).toLocaleString();

            document.getElementById('resumeUploadSection').classList.add('hidden');
            document.getElementById('currentResumeSection').classList.remove('hidden');
            document.getElementById('uploadNewSection').classList.remove('hidden');

            // Reset form
            document.getElementById('resumeUploadForm').reset();
            document.getElementById('selectedFileName').classList.add('hidden');
          } else {
            alert('Upload failed: ' + data.message);
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Error uploading resume. Please try again.');
        })
        .finally(() => {
          // Reset button
          submitBtn.textContent = originalText;
          submitBtn.disabled = false;
        });
    }
  </script>

  <%- include('layout/footer.ejs') %>