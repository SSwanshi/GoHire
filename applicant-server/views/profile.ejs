<%- include('layout/header') %>
  <nav
    class="bg-gradient-to-r from-blue-700 to-blue-500 p-5 shadow-xl fixed w-full z-10 transition-all duration-300 bg-blue-500"
    id="navbar">
    <div class="container mx-auto flex justify-between items-center">
      <a href="/" class="text-black text-3xl font-bold transition-transform hover:scale-105 duration-300 ml-2">Go<span
          class="text-yellow-400">Hire</span></a>

      <div class="relative w-1/3 group">
        <form action="/search" method="POST" id="search-form"><input id="search-space" type="text"
            placeholder="Search for Opportunities" name="parsedValue"
            class="w-full p-3 rounded-full border-2 border-blue-300 focus:outline-none focus:ring-2 focus:ring-yellow-400 transition-all duration-300 shadow-md placeholder:text-gray-700">
        </form>
        <div class="absolute right-3 top-3.5 text-yellow-500">
          <a href="/search" id="search-btn"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none"
              viewBox="0 0 24 24" stroke="currentColor" stroke-width="4">
              <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg></a>
        </div>
      </div>

      <ul class="hidden md:flex space-x-8 text-white">
        <li><a href="/"
            class="hover:text-yellow-300 transition-colors duration-300 font-extrabold relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0 after:bg-yellow-300 after:transition-all after:duration-300 hover:after:w-full">Home</a>
        </li>
        <li><a href="/jobs"
            class="hover:text-yellow-300 transition-colors duration-300 font-extrabold relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0 after:bg-yellow-300 after:transition-all after:duration-300 hover:after:w-full">Jobs</a>
        </li>
        <li><a href="/internships"
            class="hover:text-yellow-300 transition-colors duration-300 font-extrabold relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0 after:bg-yellow-300 after:transition-all after:duration-300 hover:after:w-full">Internship</a>
        </li>
        <li><a href="/contact"
            class="hover:text-yellow-300 transition-colors duration-300 font-extrabold relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0 after:bg-yellow-300 after:transition-all after:duration-300 hover:after:w-full">Contact
            Us</a></li>
        <li><a href="/login"
            class="bg-yellow-400 hover:bg-yellow-500 text-blue-800 font-black py-2 px-6 rounded-full transition-all duration-300 hover:shadow-lg">Login</a>
        </li>
      </ul>


      <div class="md:hidden flex flex-col space-y-1 cursor-pointer" id="mobile-menu">
        <span class="block w-6 h-0.5 bg-white transition-all duration-300"></span>
        <span class="block w-6 h-0.5 bg-white transition-all duration-300"></span>
        <span class="block w-6 h-0.5 bg-white transition-all duration-300"></span>
      </div>
    </div>
  </nav>

  <header class="pt-32 pb-24  text-white relative overflow-hidden ">
    <div class="max-w-4xl mx-auto bg-white p-8 rounded-lg shadow-lg mt-4">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        <div class="md:col-span-1 flex flex-col items-center justify-start">
          <div class="relative group">
            <img id="profileImage" src="" alt="Profile Photo"
              class="w-40 h-40 object-cover rounded-full border-4 border-yellow-400 shadow-md profile-image">
            <div
              class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-40 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300">
              <label for="imageUpload" class="cursor-pointer text-white text-sm font-medium">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 mx-auto mb-1" fill="none" viewBox="0 0 24 24"
                  stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z" />
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M15 13a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
                Change Photo
              </label>
            </div>
          </div>
          <input type="file" id="imageUpload" class="hidden" accept="image/*">

          <button
            class="mt-6 bg-blue-600 hover:bg-blue-700 text-white py-2 px-6 rounded-lg shadow transition duration-300 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24"
              stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
            </svg>
            Change Photo
          </button>
        </div>

        <div class="md:col-span-2">
          <h2 class="text-2xl font-bold text-blue-900 mb-6 pb-2 border-b-2 border-yellow-400">Profile Information</h2>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="bg-blue-50 p-4 rounded-lg">
              <label class="block text-sm font-medium text-blue-700">First Name</label>
              <p class="text-lg text-blue-900 font-semibold">
                Anuj
              </p>
            </div>

            <div class="bg-blue-50 p-4 rounded-lg">
              <label class="block text-sm font-medium text-blue-700">Last Name</label>
              <p class="text-lg text-blue-900 font-semibold">
                Rathore
              </p>
            </div>

            <div class="bg-blue-50 p-4 rounded-lg">
              <label class="block text-sm font-medium text-blue-700">Email Address</label>
              <p class="text-lg text-blue-900 font-semibold flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-600" fill="none"
                  viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                </svg>
                anujrathore385@gmail.com
              </p>
            </div>

            <div class="bg-blue-50 p-4 rounded-lg">
              <label class="block text-sm font-medium text-blue-700">Phone Number</label>
              <p class="text-lg text-blue-900 font-semibold flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-600" fill="none"
                  viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                </svg>
                9340041042
              </p>
            </div>

            <div class="bg-blue-50 p-4 rounded-lg">
              <label class="block text-sm font-medium text-blue-700">Gender</label>
              <p class="text-lg text-blue-900 font-semibold">
                Male
              </p>
            </div>

            <div class="bg-blue-50 p-4 rounded-lg">
              <label class="block text-sm font-medium text-blue-700">Member Since</label>
              <p class="text-lg text-blue-900 font-semibold">
                March 2025
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Resume Upload Section -->
      <div class="mt-8 bg-white rounded-lg shadow-md p-6">
        <h2 class="text-2xl font-bold text-gray-800 mb-4">Resume Information</h2>
        <div class="border-b border-gray-300 mb-6"></div>

        <div class="space-y-6">
          <!-- Current Resume Display -->
          <div id="currentResumeSection" class="<%= resumeData ? 'block' : 'hidden' %> p-4 bg-blue-50 rounded-lg">
            <div class="flex items-center justify-between">
              <div>
                <p class="text-lg font-semibold text-gray-800">Current Resume</p>
                <p class="text-sm text-gray-600" id="resumeFileName">
                  <%= resumeData ? resumeData.fileName : '' %>
                </p>
                <p class="text-xs text-gray-500" id="resumeUploadDate">Uploaded: <%= resumeData ? resumeData.uploadDate
                    : '' %>
                </p>
              </div>
              <div class="flex space-x-2">
                <button id="viewResumeBtn"
                  class="px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700 transition"
                  onclick="viewResume()">
                  View
                </button>
                <button id="deleteResumeBtn"
                  class="px-3 py-1 bg-red-600 text-white text-sm rounded hover:bg-red-700 transition"
                  onclick="deleteResume()">
                  Delete
                </button>
              </div>
            </div>
          </div>

          <!-- Resume Upload Form -->
          <div id="resumeUploadSection" class="<%= resumeData ? 'hidden' : 'block' %>">
            <form id="resumeUploadForm" enctype="multipart/form-data" class="space-y-4">
              <div
                class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-blue-500 transition"
                id="dropZone">
                <input type="file" id="resumeFile" name="resume" accept=".pdf,.doc,.docx" class="hidden" />
                <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48"
                  aria-hidden="true">
                  <path
                    d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4h-12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02"
                    stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <div class="mt-2">
                  <p class="text-sm text-gray-700">
                    <span class="font-medium text-blue-600 hover:text-blue-500">Click to upload</span> or drag and drop
                  </p>
                  <p class="text-xs text-gray-500 mt-1">PDF, DOC, or DOCX up to 5MB</p>
                </div>
                <p id="selectedFileName" class="mt-2 text-sm text-gray-600 hidden"></p>
              </div>

              <div>
                <label for="resumeTitle" class="block text-sm font-medium text-gray-700">Resume Title (Optional)</label>
                <input type="text" id="resumeTitle" name="resumeTitle" placeholder="My Professional Resume"
                  class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
              </div>

              <div class="flex justify-end">
                <button type="submit"
                  class="px-4 py-2 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition">
                  Upload Resume
                </button>
              </div>
            </form>
          </div>

          <!-- Upload Button (shown when a resume exists) -->
          <div id="uploadNewSection" class="<%= resumeData ? 'block' : 'hidden' %> text-center">
            <button onclick="showUploadForm()"
              class="px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition">
              Upload New Resume
            </button>
          </div>
        </div>
      </div>


      <div class="mt-8 flex justify-end space-x-4">
        <button onclick="window.location.href = ' /'"
          class="bg-gray-200 hover:bg-gray-300 text-gray-800 py-2 px-4 rounded-lg transition duration-300">Log
          Out</button>
      </div>
  </header>

  <script>
    document.getElementById('imageUpload').addEventListener('change', function (event) {
      const file = event.target.files[0];
      if (file) {
        if (file.size > 5 * 1024 * 1024) {
          alert('File is too large. Maximum size is 5MB.');
          return;
        }

        // File type validation (optional)
        if (!file.type.match('image.*')) {
          alert('Only image files are allowed.');
          return;
        }

        const reader = new FileReader();
        reader.onload = function (e) {
          // Display preview immediately
          document.getElementById('profileImage').src = e.target.result;

          // Upload the image to server
          const formData = new FormData();
          formData.append('profileImage', file);

          fetch('/user/upload-profile-image', {
            method: 'POST',
            body: formData
          })
            .then(response => {
              if (!response.ok) {
                throw new Error('Network response was not ok');
              }
              return response.json();
            })
            .then(data => {
              if (data.success) {
                // Update all profile images on the page with the new URL
                const profileImages = document.querySelectorAll('.profile-image');
                profileImages.forEach(img => {
                  img.src = data.imageUrl;
                });

                console.log('Profile image updated successfully!');
              } else {
                console.error('Upload failed:', data.message);
                alert('Upload failed: ' + data.message);
              }
            })
            .catch(error => {
              console.error('Error uploading image:', error);
              alert('Error uploading image. Please try again.');
              // Revert the preview to the original image
              document.getElementById('profileImage').src = " '/uploads/profiles/default-image.jpg' %>";
            });
        };
        reader.readAsDataURL(file);
      }
    });

    // Client-side JavaScript for resume upload functionality
    document.addEventListener('DOMContentLoaded', function () {
      const dropZone = document.getElementById('dropZone');
      const resumeFile = document.getElementById('resumeFile');
      const selectedFileName = document.getElementById('selectedFileName');
      const resumeUploadForm = document.getElementById('resumeUploadForm');

      // Click on drop zone to trigger file input
      dropZone.addEventListener('click', function () {
        resumeFile.click();
      });

      // Handle file selection
      resumeFile.addEventListener('change', function () {
        if (this.files && this.files[0]) {
          const file = this.files[0];
          if (validateFile(file)) {
            selectedFileName.textContent = file.name;
            selectedFileName.classList.remove('hidden');
            dropZone.classList.add('border-blue-500', 'bg-blue-50');
          } else {
            resetFileInput();
          }
        }
      });

      // Handle drag and drop
      ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, preventDefaults, false);
      });

      function preventDefaults(e) {
        e.preventDefault();
        e.stopPropagation();
      }

      ['dragenter', 'dragover'].forEach(eventName => {
        dropZone.addEventListener(eventName, highlight, false);
      });

      ['dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, unhighlight, false);
      });

      function highlight() {
        dropZone.classList.add('border-blue-500', 'bg-blue-50');
      }

      function unhighlight() {
        dropZone.classList.remove('border-blue-500', 'bg-blue-50');
      }

      dropZone.addEventListener('drop', handleDrop, false);

      function handleDrop(e) {
        const dt = e.dataTransfer;
        const file = dt.files[0];

        if (validateFile(file)) {
          resumeFile.files = dt.files;
          selectedFileName.textContent = file.name;
          selectedFileName.classList.remove('hidden');
        } else {
          resetFileInput();
        }
      }

      function validateFile(file) {
        // Check file type
        const validTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];
        if (!validTypes.includes(file.type)) {
          alert('Invalid file type. Please upload a PDF, DOC, or DOCX file.');
          return false;
        }

        // Check file size (5MB max)
        if (file.size > 5 * 1024 * 1024) {
          alert('File is too large. Maximum size is 5MB.');
          return false;
        }

        return true;
      }

      function resetFileInput() {
        resumeFile.value = '';
        selectedFileName.textContent = '';
        selectedFileName.classList.add('hidden');
        dropZone.classList.remove('border-blue-500', 'bg-blue-50');
      }

      // Handle form submission
      resumeUploadForm.addEventListener('submit', function (e) {
        e.preventDefault();

        if (!resumeFile.files || !resumeFile.files[0]) {
          alert('Please select a file to upload.');
          return;
        }

        const formData = new FormData();
        formData.append('resume', resumeFile.files[0]);
        formData.append('resumeTitle', document.getElementById('resumeTitle').value);

        // In a real application, you would send this to your server
        // For this example, we'll simulate a successful upload
        uploadResume(formData);
      });
    });

    // Function to show upload form when "Upload New Resume" is clicked
    function showUploadForm() {
      document.getElementById('currentResumeSection').classList.add('hidden');
      document.getElementById('uploadNewSection').classList.add('hidden');
      document.getElementById('resumeUploadSection').classList.remove('hidden');
    }

    // Function to view the resume
    function viewResume() {
      // In a real application, this would open the resume file
      alert('Opening resume...');
    }

    // Function to delete the resume
    function deleteResume() {
      if (confirm('Are you sure you want to delete your resume?')) {
        // In a real application, send a request to delete the file
        // For this example, we'll simulate a successful deletion
        fetch('/api/resume', {
          method: 'DELETE',
        })
          .then(response => {
            if (response.ok) {
              document.getElementById('currentResumeSection').classList.add('hidden');
              document.getElementById('uploadNewSection').classList.add('hidden');
              document.getElementById('resumeUploadSection').classList.remove('hidden');
            }
          })
          .catch(error => {
            console.error('Error deleting resume:', error);
          });
      }
    }

    // Function to upload resume (simulation for this example)
    function uploadResume(formData) {
      // Show loading state
      const submitBtn = document.querySelector('#resumeUploadForm button[type="submit"]');
      const originalText = submitBtn.textContent;
      submitBtn.textContent = 'Uploading...';
      submitBtn.disabled = true;

      // In a real application, you would use fetch to send the form data to your server
      // For this example, we'll simulate a successful upload after a short delay
      setTimeout(() => {
        // Update UI to show the uploaded resume
        const fileName = document.getElementById('resumeFile').files[0].name;
        const now = new Date();
        const formattedDate = now.toLocaleDateString() + ' ' + now.toLocaleTimeString();

        document.getElementById('resumeFileName').textContent = fileName;
        document.getElementById('resumeUploadDate').textContent = 'Uploaded: ' + formattedDate;

        document.getElementById('resumeUploadSection').classList.add('hidden');
        document.getElementById('currentResumeSection').classList.remove('hidden');
        document.getElementById('uploadNewSection').classList.remove('hidden');

        // Reset form
        document.getElementById('resumeUploadForm').reset();
        document.getElementById('selectedFileName').classList.add('hidden');

        // Reset button
        submitBtn.textContent = originalText;
        submitBtn.disabled = false;
      }, 1500);
    }
  </script>

  <%- include('layout/footer.ejs') %>