<!-- views/profile.ejs -->
<%- include('layout/header.ejs') %>

  <nav class="bg-gradient-to-r from-blue-700 to-blue-500 p-5 shadow-xl fixed w-full z-10 transition-all duration-300"
    id="navbar">
    <div class="container mx-auto flex justify-between items-center">
      <a href="/" class="text-black text-3xl font-bold transition-transform hover:scale-105 duration-300 ml-2">Go<span
          class="text-yellow-400">Hire</span></a>

      <div class="relative w-1/3 group">
        <form action="/search" method="POST" id="search-form"><input id="search-space" type="text"
            placeholder="Search for Opportunities" name="parsedValue"
            class="w-full p-3 rounded-full border-2 border-blue-300 focus:outline-none focus:ring-2 focus:ring-yellow-400 transition-all duration-300 shadow-md placeholder:text-gray-700">
        </form>
        <div class="absolute right-3 top-3.5 text-yellow-500">
          <a href="/search" id="search-btn"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none"
              viewBox="0 0 24 24" stroke="currentColor" stroke-width="4">
              <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg></a>
        </div>

      </div>

      <ul class="hidden md:flex space-x-8 text-white">
        <li><a href="/"
            class="hover:text-yellow-300 transition-colors duration-300 font-extrabold relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0 after:bg-yellow-300 after:transition-all after:duration-300 hover:after:w-full">Home</a>
        </li>
        <li><a href="/jobs"
            class="hover:text-yellow-300 transition-colors duration-300 font-extrabold relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0 after:bg-yellow-300 after:transition-all after:duration-300 hover:after:w-full">Jobs</a>
        </li>
        <li><a href="/internships"
            class="hover:text-yellow-300 transition-colors duration-300 font-extrabold relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0 after:bg-yellow-300 after:transition-all after:duration-300 hover:after:w-full">Internship</a>
        </li>
        <li><a href="/contact"
            class="hover:text-yellow-300 transition-colors duration-300 font-extrabold relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0 after:bg-yellow-300 after:transition-all after:duration-300 hover:after:w-full">Contact
            Us</a></li>
        <li><a href="/login"
            class="bg-yellow-400 hover:bg-yellow-500 text-blue-800 font-black py-2 px-6 rounded-full transition-all duration-300 hover:shadow-lg">Login</a>
        </li>
      </ul>


      <div class="md:hidden flex flex-col space-y-1 cursor-pointer" id="mobile-menu">
        <span class="block w-6 h-0.5 bg-white transition-all duration-300"></span>
        <span class="block w-6 h-0.5 bg-white transition-all duration-300"></span>
        <span class="block w-6 h-0.5 bg-white transition-all duration-300"></span>
      </div>
    </div>
  </nav>

  <header
    class="pt-28 pb-24 bg-gradient-to-br from-blue-600 via-blue-700 to-blue-500 text-white relative overflow-hidden">
    <div class="profile-container">
      <!-- Profile Header Section -->
      <div class="profile-header">
        <div class="profile-top">
          <div class="profile-image-container">
            <div class="profile-image">
              <img id="profile-img" src="<%= user.profileImage || '/images/default-avatar.png' %>"
                alt="Profile Picture">
              <div class="image-overlay">
                <label for="upload-profile-image" class="upload-icon">
                  <i class="fas fa-camera"></i>
                </label>
                <input type="file" id="upload-profile-image" accept="image/*" style="display: none;">
              </div>
            </div>
          </div>
          <div class="profile-basic-info">
            <div class="info-edit-container">
              <div class="profile-degree">
                <p>
                  <%= user.degree %>
                </p>
              </div>
              <button class="edit-btn"><i class="fas fa-pencil-alt"></i></button>
            </div>
            <div class="profile-college">
              <p>
                <%= user.college %>
              </p>
            </div>
          </div>
        </div>

        <div class="profile-details">
          <div class="detail-row">
            <div class="detail-item location">
              <i class="fas fa-map-marker-alt"></i>
              <span>
                <%= user.location %>
              </span>
            </div>
            <div class="detail-item phone">
              <i class="fas fa-phone"></i>
              <span>
                <%= user.phone %>
              </span>
              <span class="verified"><i class="fas fa-check-circle"></i></span>
            </div>
          </div>
          <div class="detail-row">
            <div class="detail-item gender">
              <i class="fas fa-venus-mars"></i>
              <span>
                <%= user.gender %>
              </span>
            </div>
            <div class="detail-item email">
              <i class="fas fa-envelope"></i>
              <span>
                <%= user.email %>
              </span>
              <span class="verified"><i class="fas fa-check-circle"></i></span>
            </div>
          </div>
          <div class="detail-row">
            <div class="detail-item birthdate">
              <i class="fas fa-calendar"></i>
              <span>
                <%= user.birthdate %>
              </span>
            </div>
          </div>
        </div>
      </div>

      <!-- Education Section -->
      <div class="profile-section">
        <div class="section-header">
          <h3>Education</h3>
          <button class="add-btn">Add</button>
        </div>
        <div class="education-item">
          <div class="education-details">
            <div class="education-info">
              <h4>
                <%= user.degree %> from <%= user.college %>
              </h4>
              <p class="education-duration">Graduating in <%= user.graduationYear %>, Full Time</p>
            </div>
            <button class="edit-btn small"><i class="fas fa-pencil-alt"></i></button>
          </div>
        </div>
      </div>

      <!-- Skills Section -->
      <div class="profile-section">
        <div class="section-header">
          <h3>Key skills</h3>
          <button class="edit-btn small"><i class="fas fa-pencil-alt"></i></button>
        </div>
        <div class="skills-container">
          <% user.skills.forEach(skill=> { %>
            <span class="skill-tag">
              <%= skill %>
            </span>
            <% }); %>
        </div>
      </div>
    </div>

    <!-- Image Upload Modal -->
    <div id="image-upload-modal" class="modal">
      <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h2>Upload Profile Picture</h2>
        <div class="image-preview-container">
          <img id="image-preview" src="/images/default-avatar.png" alt="Preview">
        </div>
        <div class="upload-controls">
          <input type="file" id="image-file" accept="image/*">
          <div class="button-group">
            <button id="cancel-upload" class="btn cancel-btn">Cancel</button>
            <button id="save-image" class="btn save-btn">Save</button>
          </div>
        </div>
      </div>


    </div>
    <!-- Languages Section (Image 3) -->
    <div class="profile-section">
      <div class="section-header">
        <h3>Languages</h3>
        <button class="add-btn">Add</button>
      </div>
      <% user.languages.forEach(language=> { %>
        <div class="language-item">
          <div class="language-name">
            <h4>
              <%= language.name %>
            </h4>
            <button class="edit-btn small"><i class="fas fa-pencil-alt"></i></button>
          </div>
          <p class="language-proficiency">
            <%= language.proficiency %>
          </p>
        </div>
        <% }); %>
    </div>

    <!-- Academic Achievements Section (Image 4) -->
    <div class="profile-section">
      <div class="section-header">
        <h3>Academic achievements</h3>
        <button class="add-btn">Add</button>
      </div>
      <div class="achievement-item">
        <div class="achievement-header">
          <h4>During <%= user.achievementTime %>
          </h4>
          <button class="edit-btn small"><i class="fas fa-pencil-alt"></i></button>
        </div>
        <p class="achievement-description">
          <%= user.achievements %>
        </p>
      </div>
    </div>

    <!-- Resume Section (Image 4) -->
    <div class="profile-section">
      <h3>Resume</h3>
      <p class="resume-description">Your resume is the first impression you make on potential employers. Craft it
        carefully to secure your desired job or internship.</p>
      <div class="resume-upload-container">
        <button class="upload-btn">Upload resume</button>
        <p class="upload-formats">Supported formats: doc, docx, rtf, pdf, up to 2MB</p>
      </div>
    </div>
    </div>

  </header>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Edit buttons functionality
      const editButtons = document.querySelectorAll('.edit-btn');
      editButtons.forEach(button => {
        button.addEventListener('click', function (e) {
          const section = e.target.closest('.profile-section, .profile-name, .education-details, .language-name, .achievement-header');
          if (section) {
            console.log('Edit button clicked for:', section.querySelector('h2, h3, h4').textContent);
            // Here you would implement edit functionality, like showing a modal or inline editing
          }
        });
      });

      // Add buttons functionality
      const addButtons = document.querySelectorAll('.add-btn');
      addButtons.forEach(button => {
        button.addEventListener('click', function (e) {
          const section = e.target.closest('.profile-section');
          if (section) {
            const sectionTitle = section.querySelector('h3').textContent;
            console.log('Add button clicked for section:', sectionTitle);
            // Here you would implement add functionality, like showing a modal
          }
        });
      });

      // Resume upload button
      const uploadButton = document.querySelector('.upload-btn');
      if (uploadButton) {
        uploadButton.addEventListener('click', function () {
          // Create a hidden file input element
          const fileInput = document.createElement('input');
          fileInput.type = 'file';
          fileInput.accept = '.doc,.docx,.rtf,.pdf';

          // Trigger click on the file input
          fileInput.click();

          // Handle file selection
          fileInput.addEventListener('change', function () {
            if (fileInput.files.length > 0) {
              const file = fileInput.files[0];

              // Check file size (2MB max)
              if (file.size > 2 * 1024 * 1024) {
                alert('File size exceeds 2MB limit');
                return;
              }

              // Here you would handle the file upload to the server
              console.log('File selected for upload:', file.name);

              // You would typically use FormData and fetch to upload the file
              // Example:
              // const formData = new FormData();
              // formData.append('resume', file);
              // fetch('/api/upload-resume', {
              //     method: 'POST',
              //     body: formData
              // })
              // .then(response => response.json())
              // .then(data => console.log('Upload successful', data))
              // .catch(error => console.error('Upload failed', error));
            }
          });
        });
      }
    });

    document.addEventListener('DOMContentLoaded', function () {
      // Image upload functionality
      const profileImg = document.getElementById('profile-img');
      const uploadProfileImage = document.getElementById('upload-profile-image');
      const imageUploadModal = document.getElementById('image-upload-modal');
      const closeModalBtn = document.querySelector('.close-modal');
      const imagePreview = document.getElementById('image-preview');
      const imageFileInput = document.getElementById('image-file');
      const saveImageBtn = document.getElementById('save-image');
      const cancelUploadBtn = document.getElementById('cancel-upload');

      let selectedFile = null;

      // Open modal when clicking on profile image
      uploadProfileImage.addEventListener('change', function (e) {
        if (this.files && this.files[0]) {
          selectedFile = this.files[0];

          // Check file type
          const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
          if (!validTypes.includes(selectedFile.type)) {
            alert('Please select a valid image file (JPEG, PNG, or GIF)');
            return;
          }

          // Check file size (2MB max)
          if (selectedFile.size > 2 * 1024 * 1024) {
            alert('File size exceeds 2MB limit');
            return;
          }

          // Show image preview
          const reader = new FileReader();
          reader.onload = function (e) {
            imagePreview.src = e.target.result;
          };
          reader.readAsDataURL(selectedFile);

          // Show modal
          imageUploadModal.style.display = 'flex';
        }
      });

      // Alternative way to open modal by clicking directly on the profile image
      profileImg.addEventListener('click', function () {
        uploadProfileImage.click();
      });

      // Close modal
      closeModalBtn.addEventListener('click', function () {
        imageUploadModal.style.display = 'none';
      });

      cancelUploadBtn.addEventListener('click', function () {
        imageUploadModal.style.display = 'none';
      });

      // Handle file selection in modal
      imageFileInput.addEventListener('change', function (e) {
        if (this.files && this.files[0]) {
          selectedFile = this.files[0];

          // Check file type and size as above
          const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
          if (!validTypes.includes(selectedFile.type)) {
            alert('Please select a valid image file (JPEG, PNG, or GIF)');
            return;
          }

          if (selectedFile.size > 2 * 1024 * 1024) {
            alert('File size exceeds 2MB limit');
            return;
          }

          // Show image preview
          const reader = new FileReader();
          reader.onload = function (e) {
            imagePreview.src = e.target.result;
          };
          reader.readAsDataURL(selectedFile);
        }
      });

      // Save profile image
      saveImageBtn.addEventListener('click', function () {
        if (selectedFile) {
          const formData = new FormData();
          formData.append('profileImage', selectedFile);

          // Send the image to the server
          fetch('/api/upload-profile-image', {
            method: 'POST',
            body: formData
          })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                // Update the profile image on success
                profileImg.src = data.imageUrl;

                // Close the modal
                imageUploadModal.style.display = 'none';

                // Show success message
                alert('Profile image updated successfully');
              } else {
                alert('Failed to upload image: ' + data.message);
              }
            })
            .catch(error => {
              console.error('Error uploading image:', error);
              alert('An error occurred while uploading the image');
            });
        }
      });

      // Close modal when clicking outside of it
      window.addEventListener('click', function (e) {
        if (e.target === imageUploadModal) {
          imageUploadModal.style.display = 'none';
        }
      });

      // Edit buttons functionality
      const editButtons = document.querySelectorAll('.edit-btn');
      editButtons.forEach(button => {
        button.addEventListener('click', function (e) {
          const section = e.target.closest('.profile-section, .info-edit-container, .education-details');
          if (section) {
            const headingElement = section.querySelector('h3, h4, p.profile-degree');
            if (headingElement) {
              console.log('Edit button clicked for:', headingElement.textContent);
            }
            // Here you would implement edit functionality
          }
        });
      });

      // Add buttons functionality
      const addButtons = document.querySelectorAll('.add-btn');
      addButtons.forEach(button => {
        button.addEventListener('click', function (e) {
          const section = e.target.closest('.profile-section');
          if (section) {
            const sectionTitle = section.querySelector('h3').textContent;
            console.log('Add button clicked for section:', sectionTitle);
            // Here you would implement add functionality
          }
        });
      });
    });
  </script>
  <%- include('layout/footer.ejs') %>